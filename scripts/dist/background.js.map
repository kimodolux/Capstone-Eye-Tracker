{"version":3,"sources":["background.js"],"names":["executeScripts","tabId","injectDetailsArray","createCallback","injectDetails","innerCallback","chrome","tabs","executeScript","callback","i","length","runtime","onInstalled","addListener","storage","local","set","model_trained","console","log","appStarted","browserAction","setTitle","title","onClicked","tab","get","result","update","id","url","file"],"mappings":";AAuBA,SAASA,EAAeC,EAAOC,GAElBC,SAAAA,EAAeF,EAAOG,EAAeC,GACnC,OAAA,WACHC,OAAOC,KAAKC,cAAcP,EAAOG,EAAeC,IAKnD,IAFDI,IAAAA,EAAW,KAENC,EAAIR,EAAmBS,OAAS,EAAGD,GAAK,IAAKA,EAClDD,EAAWN,EAAeF,EAAOC,EAAmBQ,GAAID,GAE3C,OAAbA,GACAA,IAhCRH,OAAOM,QAAQC,YAAYC,YAAY,WAErCR,OAAOS,QAAQC,MAAMC,IAAI,CAACC,eAAe,GAAQ,WAC/CC,QAAQC,IAAI,oCAGdd,OAAOS,QAAQC,MAAMC,IAAI,CAACI,YAAY,GAAQ,WAC5CF,QAAQC,IAAI,8CAGZd,OAAOgB,cAAcC,SAAS,CAACC,MAAO,uBAAwB,WAC5DL,QAAQC,IAAI,kDA2BlBd,OAAOgB,cAAcG,UAAUX,YAAY,SAAUY,GACnDP,QAAQC,IAAI,kBAGZd,OAAOS,QAAQC,MAAMW,IAAI,CAAC,cAAe,SAASC,GAChDT,QAAQC,IAAI,aAGPQ,EAAOP,WAgCVf,OAAOS,QAAQC,MAAMC,IAAI,CAACI,YAAY,GAAQ,WAC5Cf,OAAOC,KAAKsB,OAAOH,EAAII,GAAK,CAACC,IAAKL,EAAIK,SA9BxCzB,OAAOgB,cAAcC,SAAS,CAACC,MAAO,iBAAkB,WACtDL,QAAQC,IAAI,6CAIdd,OAAOS,QAAQC,MAAMC,IAAI,CAACI,YAAY,GAAO,WAC3CF,QAAQC,IAAI,4BACZpB,EAAe,KAAM,CACnB,CAAEgC,KAAM,oCACR,CAAEA,KAAM,6BACR,CAAEA,KAAM,8BACR,CAAEA,KAAM,uBACR,CAAEA,KAAM,2BACR,CAAEA,KAAM,oBACR,CAAEA,KAAM,+BACR,CAAEA,KAAM,6BACR,CAAEA,KAAM,2BACR,CAAEA,KAAM,8BACR,CAAEA,KAAM,8BACR,CAAEA,KAAM,0BACR,CAAEA,KAAM,mBACR,CAAEA,KAAM,4BAGVb,QAAQC,IAAI","file":"background.js","sourceRoot":"..","sourcesContent":["//Background Script\n\n\n\nchrome.runtime.onInstalled.addListener(function() {\n  //sets the state of the convolutional neural network\n  chrome.storage.local.set({model_trained: false}, function(){\n    console.log('The model has not been trained');\n  });\n  //set the state of the app to \"Started = false\".\n  chrome.storage.local.set({appStarted: false}, function() {\n    console.log(\"Background script loaded. App not started.\");\n\n    //change tooltip on plugin button to aid users.\n    chrome.browserAction.setTitle({title: \"Start Gaze Tracking\"}, function(){\n      console.log(\"Button title changed to 'Start Tracking'\");\n    });\n  });\n\n});\n\n//this is a helper funciton which sequentially injects a list of content scripts into an HTML page\n//Credit to Xan and Douglas at https://stackoverflow.com/a/21535234\nfunction executeScripts(tabId, injectDetailsArray)\n{\n    function createCallback(tabId, injectDetails, innerCallback) {\n        return function () {\n            chrome.tabs.executeScript(tabId, injectDetails, innerCallback);\n        };\n    }\n    var callback = null;\n\n    for (var i = injectDetailsArray.length - 1; i >= 0; --i)\n        callback = createCallback(tabId, injectDetailsArray[i], callback);\n\n    if (callback !== null)\n        callback();   // execute outermost function\n}\n\n\n\n//Triggers the plugin to either stop or start gaze tracking when it is pressed \nchrome.browserAction.onClicked.addListener(function (tab) {\n  console.log(\"button clicked\");\n  \n  //check the app state: started or stopped\n  chrome.storage.local.get(['appStarted'], function(result){\n    console.log(\"start app\");\n\n    //if app is not runnning, start app\n    if (!result.appStarted){\n\n      //change tooltip on plugin button\n      chrome.browserAction.setTitle({title: \"Stop Tracking\"}, function(){\n        console.log(\"Button title changed to 'Stop Tracking'\");\n      });\n\n      //inject the app's content scripts into the active HTML page\n      chrome.storage.local.set({appStarted: true}, function() {\n        console.log(\"App started. Setting up.\");\n        executeScripts(null, [ \n          { file: \"dependencies/jquery-3.4.1.min.js\" }, \n          { file: \"dependencies/clmtrackr.js\" },\n          { file: \"dependencies/simpleheat.js\" },\n          { file: \"scripts/ui/setup.js\" },\n          { file: \"scripts/ui/calibrate.js\" },\n          { file: \"scripts/ui/ui.js\" },\n          { file: \"scripts/test/consoleTest.js\" },\n          { file: \"scripts/modules/cursor.js\" },\n          { file: \"scripts/modules/heat.js\" },\n          { file: \"scripts/modules/pointer.js\" },\n          { file: \"scripts/modules/tracker.js\" },\n          { file: \"dist/neural_network.js\" },\n          { file: \"scripts/main.js\" },\n          { file: \"scripts/ui/listener.js\" },\n          \n        ]);\n        console.log(\"Content Scripts injected.\");\n      });\n    } else {\n      //if the app is started then refresh the page to stop content scripts\n      //and remove HTML elements that were added to the page.\n      chrome.storage.local.set({appStarted: false}, function() {\n        chrome.tabs.update(tab.id , {url: tab.url})\n      });\n    }\n  });\n\n});"]}